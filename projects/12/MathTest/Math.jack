// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array twoToThe;
    static int qy2;
    /** Initializes the library. */
    function void init() {
        let twoToThe = Array.new(16);
        let twoToThe[0] = 1;
        let twoToThe[1] = 2;
        let twoToThe[2] = 4;
        let twoToThe[3] = 8;
        let twoToThe[4] = 16;
        let twoToThe[5] = 32;
        let twoToThe[6] = 64;
        let twoToThe[7] = 128;
        let twoToThe[8] = 256;
        let twoToThe[9] = 512;
        let twoToThe[10] = 1024;
        let twoToThe[11] = 2048;
        let twoToThe[12] = 4096;
        let twoToThe[13] = 8192;
        let twoToThe[14] = 16384;
        let twoToThe[15] = -16384;        
        
        return ;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if(x<0)
        {
            return -x;
        }
        return x;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int sum;
        var int shiftedX;
        var int counter;
        let shiftedX = x;
        while(counter < 16)
        {
            if(y & twoToThe[counter])
            {
                let sum = sum + shiftedX;
            }
            let shiftedX = shiftedX + shiftedX;
            let counter = counter + 1;
        }
        return sum;

    }

    
    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int result;
        let qy2 = 0;
        let result = Math.internalDivide(Math.abs(x),Math.abs(y));        
        if(x<0 | y< 0)
        {
            return - result;
        }
        return result;
    }
    function int internalDivide(int x, int y)
    {
        var int q;        
        if((y>x) | y < 0)
        {
            return 0;
        } 
        let q = Math.internalDivide(x, y + y);
        if((x-qy2) < y)
        {
            return q + q;
        }
        else{ 
            let qy2 = qy2 + y;
            return  q + q +1;
        }

    }
    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int n;
        var int n1;
        let n = (x/2) + 1;
        let n1 = (n + (x/n))/2;
        while(n1 < n)
        {
            let n = n1;
            let n1 = (n + (x/n))/2;
        }
        return n;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if(a<b)
        {
            return b;
        }
        return a;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if(a<b)
        {
            return a;
        }
        return b;
    }
}
